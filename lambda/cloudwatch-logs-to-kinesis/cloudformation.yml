AWSTemplateFormatVersion:               "2010-09-09"
Description:                            "Creates a Lambda function to receive CloudWatch Logs events and send them to Kinesis"

Parameters:

  LambdaName:
    Description:                        "Name of the Lambda function to create"
    Type:                               "String"
    Default:                            "CloudwatchLogsSubscriber"

  SourceBucket:
    Description:                        "The S3 bucket where you uploaded the Lamdba deployment bundle"
    Type:                               "String"
    Default:                            ""

  SourceKey:
    Description:                        "The path in that bucket to the Lambda deployment bundle"
    Type:                               "String"
    Default:                            "subscriber-deployment.zip"

  LogGroupName:
    Description:                        "Name of the CloudWatch log group that will be subscribed (omit for no subscription)"
    Type:                               "String"
    Default:                            "AppenderExample"

  KinesisStreamName:
    Description:                        "Name of the Kinesis stream that will receive log events"
    Type:                               "String"
    Default:                            "AppenderExample"

Conditions:

    CreateSubscription:                 !Not [ !Equals [ !Ref LogGroupName, "" ]]

Resources:

  LambdaRole:
    Type:                               "AWS::IAM::Role"
    Properties:
      Path:                             "/lambda/"
      RoleName:                         !Sub "${LambdaName}-ExecutionRole"
      AssumeRolePolicyDocument:
        Version:                        "2012-10-17"
        Statement:
          Effect:                       "Allow"
          Principal:
            Service:                    "lambda.amazonaws.com"
          Action:                       "sts:AssumeRole"
      ManagedPolicyArns:
        -                               "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        -
          PolicyName:                   "WriteToKinesis"
          PolicyDocument:
            Version:                    "2012-10-17"
            Statement:
              Effect:                   "Allow"
              Action:                   [ "kinesis:PutRecords" ]
              Resource:                 [ !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${KinesisStreamName}" ]


  LambdaFunction:
    Type:                               "AWS::Lambda::Function"
    Properties: 
      FunctionName:                     !Ref LambdaName
      Description:                      "Responds to events from a CloudWatch Logs subscription, sending them to Kinesis"
      Runtime:                          "python3.7"
      Handler:                          "lambda_function.lambda_handler"
      Code: 
        S3Bucket:                       !Ref SourceBucket
        S3Key:                          !Ref SourceKey
      MemorySize:                       128
      Timeout:                          60
      Environment: 
        Variables:
          STREAM_NAME:                  !Ref KinesisStreamName
      Role:                             !GetAtt LambdaRole.Arn


  LambdaPermission:
    Type:                               "AWS::Lambda::Permission"
    Properties: 
      FunctionName:                     !Ref LambdaFunction
      Action:                           "lambda:InvokeFunction"
      Principal:                        !Sub "logs.${AWS::Region}.amazonaws.com"
      SourceAccount:                    !Ref 'AWS::AccountId'


  Subscription:
    Type:                               "AWS::Logs::SubscriptionFilter"
    Condition:                          CreateSubscription
    Properties:
      LogGroupName:                     !Ref LogGroupName
      FilterPattern:                    ""
      DestinationArn:                   !GetAtt LambdaFunction.Arn
