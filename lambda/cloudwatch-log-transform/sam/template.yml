AWSTemplateFormatVersion:               "2010-09-09"
Description:                            "A Lambda function that receives CloudWatch Logs events from one Kinesis stream and writes them to another"
Transform:                              "AWS::Serverless-2016-10-31"

Parameters:

  LambdaName:
    Description:                        "Name of the Lambda function to create"
    Type:                               "String"
    Default:                            "CloudWatchLogsTransformer"

  SourceStreamName:
    Description:                        "Name of the source Kinesis stream"
    Type:                               "String"
    Default:                            "CloudWatchSubscriptionDestination"

  DestinationStreamName:
    Description:                        "Name of the Kinesis stream that will receive transformed log events"
    Type:                               "String"
    Default:                            "AppenderExample"

Resources:

  LambdaRole:
    Type:                               "AWS::IAM::Role"
    Properties:
      Path:                             "/lambda/"
      RoleName:                         !Sub "${LambdaName}-ExecutionRole"
      AssumeRolePolicyDocument:
        Version:                        "2012-10-17"
        Statement:
          Effect:                       "Allow"
          Principal:
            Service:                    "lambda.amazonaws.com"
          Action:                       "sts:AssumeRole"
      ManagedPolicyArns:
        -                               "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        -
          PolicyName:                   "ReadFromSource"
          PolicyDocument:
            Version:                    "2012-10-17"
            Statement:
              Effect:                   "Allow"
              Action:
                -                       "kinesis:ListStreams"
                -                       "kinesis:DescribeStream"
                -                       "kinesis:GetShardIterator"
                -                       "kinesis:GetRecords"
              Resource:                 [ !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${SourceStreamName}" ]
        -
          PolicyName:                   "WriteToDestination"
          PolicyDocument:
            Version:                    "2012-10-17"
            Statement:
              Effect:                   "Allow"
              Action:                   [ "kinesis:PutRecords" ]
              Resource:                 [ !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${DestinationStreamName}" ]

  LambdaFunction:
    Type:                               "AWS::Serverless::Function"
    Properties:
      FunctionName:                     !Ref LambdaName
      Description:                      "Responds to CloudWatch Logs events delivered via Kinesis stream"
      Role:                             !GetAtt LambdaRole.Arn
      Runtime:                          "python3.7"
      CodeUri:                          "src/"
      Handler:                          "lambda_function.lambda_handler"
      MemorySize:                       128
      Timeout:                          60
      Environment: 
        Variables:
          DESTINATION_STREAM_NAME:      !Ref DestinationStreamName

  EventSource:
    Type:                               "AWS::Lambda::EventSourceMapping"
    Properties: 
      EventSourceArn:                   !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${SourceStreamName}" 
      FunctionName:                     !Ref LambdaFunction
      Enabled:                          true
      StartingPosition:                 LATEST
      BatchSize:                        100
      MaximumBatchingWindowInSeconds:   30
